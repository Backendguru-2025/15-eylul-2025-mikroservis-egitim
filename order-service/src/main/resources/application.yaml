spring:
  application:
    name: order-service
  threads.virtual.enabled: false
  sql.init.mode: always
  jpa:
    defer-datasource-initialization: true
    hibernate.ddl-auto: create-drop
    properties.hibernate.dialect: org.hibernate.dialect.MySQLDialect
  datasource:
    url: jdbc:mysql://mysql-db:3306/orderservicedb?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: orderdbuser
    password: cokgizlisifre

  config:
    import: "optional:configserver:http://config-server:8888"

  kafka:
    producer:
      bootstrap-servers: kafka:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      bootstrap-servers: kafka:29092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.beguru.service.order_service.event.Event

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true
  zipkin:
    tracing:
      endpoint: http://zipkin-server:9411/api/v2/spans
  tracing:
    enabled: true
    sampling:
      probability: 1.0

